{"version":3,"sources":["components/Intro.js","components/questions.js","components/Quiz.js","components/Result.js","App.js","index.js"],"names":["Intro","props","className","onClick","handleStartQuiz","repo","question","a","choice","correct","b","c","d","Quiz","useState","questionNumber","setQuestionNumber","setQuestion","setChoice","handleChoice","event","target","value","type","name","checked","onChange","id","htmlFor","preventDefault","previous","answer","localStorage","getItem","length","setItem","handleResult","Result","calcScore","score","i","toString","handleIntro","App","quiz","setQuiz","intro","setIntro","result","setResult","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e13d2d7e.chunk.js","sourcesContent":["/*=====================================\r\nIntro is a child component of App. \r\nThis component contains the instructions and the start button of the quiz.\r\n=====================================*/\r\n\r\nimport React from 'react';\r\n\r\nfunction Intro(props) {\r\n  return (\r\n    <div>\r\n      <h1>Instructions</h1>\r\n      <p>\r\n        Choose the best answer from the choices. To pass, you must get a score\r\n        of at least 80%.\r\n      </p>\r\n      <p>\r\n        You can always go back to the previous questions to review your answers.\r\n        When you are done, click <strong>Submit</strong>.\r\n      </p>\r\n\r\n      <button className=\"next\" onClick={props.handleStartQuiz}>\r\n        Start Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n","const repo = [\r\n  {\r\n    question:\r\n      'When 1100010 is divided by 0101, what will be the decimal remainder?',\r\n    a: {\r\n      choice: '2',\r\n      correct: false,\r\n    },\r\n    b: {\r\n      choice: '3',\r\n      correct: true,\r\n    },\r\n    c: {\r\n      choice: '4',\r\n      correct: false,\r\n    },\r\n    d: {\r\n      choice: '6',\r\n      correct: false,\r\n    },\r\n  },\r\n  {\r\n    question:\r\n      'A logic circuit that provides a HIGH output for both inputs HIGH or both inputs LOW is a(n):',\r\n    a: {\r\n      choice: 'Ex-NOR gate',\r\n      correct: true,\r\n    },\r\n    b: {\r\n      choice: 'OR gate',\r\n      correct: false,\r\n    },\r\n    c: {\r\n      choice: 'Ex-OR gate',\r\n      correct: false,\r\n    },\r\n    d: {\r\n      choice: 'NAND gate',\r\n      correct: false,\r\n    },\r\n  },\r\n  {\r\n    question: \"Identify the type of gate from the equation X = A'B + AB'\",\r\n    a: {\r\n      choice: 'Ex-NOR gate',\r\n      correct: false,\r\n    },\r\n    b: {\r\n      choice: 'OR gate',\r\n      correct: false,\r\n    },\r\n    c: {\r\n      choice: 'Ex-OR gate',\r\n      correct: true,\r\n    },\r\n    d: {\r\n      choice: 'NAND gate',\r\n      correct: false,\r\n    },\r\n  },\r\n  {\r\n    question: 'How many basic binary subtraction operations are possible?',\r\n    a: {\r\n      choice: '4',\r\n      correct: false,\r\n    },\r\n    b: {\r\n      choice: '3',\r\n      correct: false,\r\n    },\r\n    c: {\r\n      choice: '2',\r\n      correct: false,\r\n    },\r\n    d: {\r\n      choice: '1',\r\n      correct: true,\r\n    },\r\n  },\r\n  {\r\n    question:\r\n      'Parity systems are defined as either________ or ________ and will add an extra ________ to the digital information being transmitted.',\r\n    a: {\r\n      choice: 'positive, negative, byte',\r\n      correct: false,\r\n    },\r\n    b: {\r\n      choice: 'odd, even, bit',\r\n      correct: true,\r\n    },\r\n    c: {\r\n      choice: 'upper, lower, digit',\r\n      correct: false,\r\n    },\r\n    d: {\r\n      choice: 'on, off, decimal',\r\n      correct: false,\r\n    },\r\n  },\r\n  {\r\n    question:\r\n      'The bits of a number that tell how large the number is are called ____________________.',\r\n    a: {\r\n      choice: 'carry bits',\r\n      correct: false,\r\n    },\r\n    b: {\r\n      choice: 'magnitude bits',\r\n      correct: true,\r\n    },\r\n    c: {\r\n      choice: 'sign bits',\r\n      correct: false,\r\n    },\r\n    d: {\r\n      choice: 'most significant bits',\r\n      correct: false,\r\n    },\r\n  },\r\n  {\r\n    question: 'Which type of gate can be used to add two bits?',\r\n    a: {\r\n      choice: 'EX-OR',\r\n      correct: true,\r\n    },\r\n    b: {\r\n      choice: 'EX-NOR',\r\n      correct: false,\r\n    },\r\n    c: {\r\n      choice: 'EX-NAND',\r\n      correct: false,\r\n    },\r\n    d: {\r\n      choice: 'NOR',\r\n      correct: false,\r\n    },\r\n  },\r\n  {\r\n    question: 'In binary number systems the sign of a number is indicated by _________.',\r\n    a: {\r\n      choice: 'Using a 0 (zero) bit in front of negative numbers',\r\n      correct: false,\r\n    },\r\n    b: {\r\n      choice: 'Inverting the bits if the number is negative',\r\n      correct: false,\r\n    },\r\n    c: {\r\n      choice: 'Including a sign bit along with the magnitude bits',\r\n      correct: true,\r\n    },\r\n    d: {\r\n        choice: 'Placing a negative sign in front of the number',\r\n        correct: false,\r\n      }\r\n  },\r\n  {\r\n    question:\r\n      'Adding in binary, the decimal values 26 + 27 will produce a sum of:',\r\n    a: {\r\n      choice: '111010',\r\n      correct: false,\r\n    },\r\n    b: {\r\n      choice: '110110',\r\n      correct: false,\r\n    },\r\n    c: {\r\n      choice: '110101',\r\n      correct: true,\r\n    },\r\n    d: {\r\n      choice: '101011',\r\n      correct: false,\r\n    },\r\n  },\r\n  {\r\n    question: 'The Ex-NOR is sometimes called the ________.',\r\n    a: {\r\n      choice: 'Parity Gate',\r\n      correct: false,\r\n    },\r\n    b: {\r\n      choice: 'Equality Gate',\r\n      correct: true,\r\n    },\r\n    c: {\r\n      choice: 'Inverted OR',\r\n      correct: false,\r\n    },\r\n    d: {\r\n      choice: 'Parity Gate or the Equality Gate',\r\n      correct: false,\r\n    },\r\n  },\r\n];\r\n\r\nexport default repo;\r\n","/*=====================================\r\nQuiz is a child component of App and contains the quiz proper.\r\nIt imports all the questions from questions.js.\r\n=====================================*/\r\n\r\nimport React, { useState } from 'react';\r\nimport repo from './questions.js';\r\n\r\nfunction Quiz(props) {\r\n  const [questionNumber, setQuestionNumber] = useState(0);\r\n  const [question, setQuestion] = useState(repo[questionNumber]);\r\n  const [choice, setChoice] = useState(null);\r\n\r\n  function handleChoice(event) {\r\n    setChoice(event.target.value);\r\n  }\r\n\r\n  function handleNextClick(event) {\r\n    event.preventDefault();\r\n    // Generate the next question and questionNumber.\r\n    setQuestionNumber((previous) => previous + 1);\r\n    setQuestion(repo[questionNumber + 1]);\r\n\r\n    // Save the user's choice to the localStorage for the current questionNumber.\r\n    localStorage.setItem(questionNumber, choice);\r\n\r\n    // If the user hasn't picked a choice for the next question, set choice to '', otherwise, load what he has chosen.\r\n    if (localStorage.getItem(questionNumber) === null) {\r\n      setChoice('');\r\n    } else {\r\n      const answer = localStorage.getItem(questionNumber + 1);\r\n      setChoice(answer);\r\n    }\r\n  }\r\n\r\n  function handlePrevClick(event) {\r\n    event.preventDefault();\r\n    // Generate the previous question and questionNumber.\r\n    setQuestionNumber((previous) => previous - 1);\r\n    setQuestion(repo[questionNumber - 1]);\r\n\r\n    // Get the user's previous answer and set that as the choice.\r\n    const answer = localStorage.getItem(questionNumber - 1);\r\n    setChoice(answer);\r\n  }\r\n\r\n  // When the user submits, get his answer from the last question and show the Results component.\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    localStorage.setItem(questionNumber, choice);\r\n    props.handleResult();\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <h1>Question #{questionNumber + 1}</h1>\r\n      <p>{question.question}</p>\r\n      <ul className=\"choicesContainer\">\r\n        <li>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"choice\"\r\n            value=\"a\"\r\n            checked={choice === 'a'}\r\n            onChange={handleChoice}\r\n            id=\"a\"\r\n          />\r\n          <label htmlFor=\"a\">\r\n            <p className=\"choiceLetter\">A</p>\r\n            <p className=\"choiceText\">{question.a.choice}</p>\r\n          </label>\r\n        </li>\r\n        <li>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"choice\"\r\n            value=\"b\"\r\n            checked={choice === 'b'}\r\n            onChange={handleChoice}\r\n            id=\"b\"\r\n          />\r\n          <label htmlFor=\"b\">\r\n            <p className=\"choiceLetter\">B</p>\r\n            <p className=\"choiceText\">{question.b.choice}</p>\r\n          </label>\r\n        </li>\r\n        <li>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"choice\"\r\n            value=\"c\"\r\n            checked={choice === 'c'}\r\n            onChange={handleChoice}\r\n            id=\"c\"\r\n          />\r\n          <label htmlFor=\"c\">\r\n            <p className=\"choiceLetter\">C</p>\r\n            <p className=\"choiceText\">{question.c.choice}</p>\r\n          </label>\r\n        </li>\r\n        <li>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"choice\"\r\n            value=\"d\"\r\n            checked={choice === 'd'}\r\n            onChange={handleChoice}\r\n            id=\"d\"\r\n          />\r\n          <label htmlFor=\"d\">\r\n            <p className=\"choiceLetter\">D</p>\r\n            <p className=\"choiceText\">{question.d.choice}</p>\r\n          </label>\r\n        </li>\r\n      </ul>\r\n      <div className=\"buttonContainer\">\r\n        {/* {Hide the Previous button when the user it at question #1.} */}\r\n        {questionNumber !== 0 ? (\r\n          <button className=\"prev\" onClick={handlePrevClick}>\r\n            Prev\r\n          </button>\r\n        ) : null}\r\n\r\n        {/* {Show the Submit button when the user is on the last question. Otherwise, show the Next button.} */} \r\n        {questionNumber + 1 === repo.length ? (\r\n          <button className=\"submit\" onClick={handleSubmit}>\r\n            Submit\r\n          </button>\r\n        ) : (\r\n          <button className=\"next\" onClick={handleNextClick}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Quiz;","/*=====================================\r\nResult is a child component of App. \r\nThis component calculates and shows the user's scores.\r\n=====================================*/\r\n\r\nimport React from 'react';\r\nimport repo from './questions.js';\r\n\r\nfunction Result(props) {\r\n  const passingPercent = 0.8;\r\n\r\n  function calcScore() {\r\n    let score = 0;\r\n    for (let i = 0; i < repo.length; i++) {\r\n\r\n      // Check if localStorage for index i has a value.\r\n      if (localStorage.getItem(i.toString()) !== 'null') {\r\n       if (repo[i][localStorage.getItem(i)].correct) {\r\n          score++;\r\n        }\r\n      }\r\n    }\r\n    return score;\r\n  }\r\n\r\n  return (\r\n    <div className=\"resultsContainer\">\r\n      <h1>Results</h1>\r\n      <p>Your result is</p>\r\n      <p className=\"score\">\r\n        {calcScore()}/{repo.length}\r\n      </p>\r\n      <p className=\"result\">\r\n        {calcScore() >= passingPercent * repo.length ? 'You Passed!' : 'You Failed.'}\r\n      </p>\r\n      <button className=\"tryAgain\" onClick={props.handleIntro}>\r\n        Try Again\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","/*=====================================\nApp is the parent component. It sets three states which are responsible on how the components will appear or hide based on its boolean values:\n  - quiz will show / hide the Quiz component.\n  - intro will show / hide the Intro component.\n  - result will show / hide the Result component.\nThese states are handed down as props for each component.\n=====================================*/\n\nimport React, { useState } from 'react';\nimport Intro from './components/Intro';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\n\nfunction App() {\n  const [quiz, setQuiz] = useState(false);\n  const [intro, setIntro] = useState(true);\n  const [result, setResult] = useState(false);\n\n  // handleStartQuiz will show the Quiz component.\n  const handleStartQuiz = () => {\n    setQuiz((previous) => !previous);\n    setIntro((previous) => !previous);\n    // Clear localStorage just in case the website refreshes.\n    localStorage.clear();\n  };\n\n  // handleResult will show the Result component.\n  const handleResult = () => {\n    setQuiz((previous) => !previous);\n    setResult((previous) => !previous);\n  };\n\n  // handleIntro will show the Intro component.\n  const handleIntro = () => {\n    setResult((previous) => !previous);\n    setIntro((previous) => !previous);\n    // Clear localStorage when the user wants to try the quiz again.\n    localStorage.clear();\n  };\n\n  return (\n    <div>\n      {intro && <Intro handleStartQuiz={handleStartQuiz} />}\n      {quiz && <Quiz handleResult={handleResult} />}\n      {result && <Result handleIntro={handleIntro} />}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}